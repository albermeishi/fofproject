<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fof.dao.AccountMapper">
  <sql id="Base_Column_List">
    id, name, money
  </sql>
  <insert id="insert" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.fof.entity.Account">
    insert into account (name, money
      )
    values (#{jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id"  parameterType="com.fof.entity.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fof.entity.Account">
    update account
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fof.entity.Account">
    update account
    set name = #{name,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectOneByCondition" resultType="com.fof.entity.Account">
       select id, name, money from account
			<where>
		        <if test="id != null">
		            and id = #{id}
		        </if>
		        <if test="name !=null">
		            and name=#{name}
		        </if>
   			 </where>
   	   order by id desc 
       limit 1 ;
	</select>
	<select id="selectListByCondition" resultType="com.fof.entity.Account">
       select id, name, money from account 
			<where>
		        <if test="id != null">
		            and id = #{id}
		        </if>
		        <if test="name !=null">
		            and name=#{name}
		        </if>
   			 </where>
   	   order by id desc;
	</select>
	   <select id="findAccountList" resultType="com.fof.entity.Account">
        select * from account
    </select>
</mapper>